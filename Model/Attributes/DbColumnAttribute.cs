using System;

namespace DamnORM.Model.Attributes
{
    /// <summary>
    /// Attribute for decorating a column that belongs to a table
    /// </summary>
    /// <seealso cref="Attribute" />
    [AttributeUsage(AttributeTargets.Property, Inherited = false, AllowMultiple = true)]
    public sealed class DbColumnAttribute : Attribute
    {
        private readonly string _ColumnName;
        private bool _CanBeNull = true;
        private int _MaxLength = 50;
        private bool _UserFriendlyNameSet;
        private string _UserFriendlyName;

        /// <summary>
        /// Initializes a new instance of the <see cref="DbColumnAttribute"/> class.
        /// </summary>
        /// <param name="columnName">Name of the column.</param>
        public DbColumnAttribute(string columnName)
        {
            this._ColumnName = columnName;
        }

        /// <summary>
        /// Gets the column name.
        /// </summary>
        public string ColumnName
        {
            get { return _ColumnName; }
        }

        /// <summary>
        /// Gets or sets a value indicating whether this column is auto-generated by the database.
        /// <para />
        /// Defaults to false.
        /// </summary>
        public bool IsAutogenerated { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether this column can have a null.
        /// <para />
        /// Defaults to true.
        /// </summary>
        public bool CanBeNull
        {
            get { return this._CanBeNull; }
            set { this._CanBeNull = value; }
        }

        /// <summary>
        /// Gets or sets the maximum number of characters a string can contain.
        /// <para />
        /// Defaults to 50.
        /// </summary>
        public int MaxLength
        {
            get { return this._MaxLength; }
            set { this._MaxLength = value; }
        }

        /// <summary>
        /// Gets or sets the user friendly name for this column.
        /// <para />
        /// Defaults to <see cref="ColumnName"/>.
        /// </summary>
        public string UserFriendlyName
        {
            get
            {
                if (this._UserFriendlyNameSet)
                    return this._UserFriendlyName;

                return this.ColumnName;
            }
            set
            {
                this._UserFriendlyName = value;
                this._UserFriendlyNameSet = true;
            }
        }
    }
}